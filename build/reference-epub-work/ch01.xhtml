<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Chapter 1. Spring Batch Introduction</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="spring-batch-reference.xhtml" title="Spring Batch - Reference Documentation"/><link rel="next" href="ch01s02.xhtml" title="Usage Scenarios"/></head><body><header/><section class="chapter" title="Chapter 1. Spring Batch Introduction" epub:type="chapter" id="spring-batch-intro"><div class="titlepage"><div><div><h1 class="title">Chapter 1. Spring Batch Introduction</h1></div></div></div><p>Many applications within the enterprise domain require bulk processing
  to perform business operations in mission critical environments. These
  business operations include automated, complex processing of large volumes
  of information that is most efficiently processed without user interaction.
  These operations typically include time based events (e.g. month-end
  calculations, notices or correspondence), periodic application of complex
  business rules processed repetitively across very large data sets (e.g.
  Insurance benefit determination or rate adjustments), or the integration of
  information that is received from internal and external systems that
  typically requires formatting, validation and processing in a transactional
  manner into the system of record. Batch processing is used to process
  billions of transactions every day for enterprises.</p><p>Spring Batch is a lightweight, comprehensive batch framework designed
  to enable the development of robust batch applications vital for the daily
  operations of enterprise systems. Spring Batch builds upon the productivity,
  POJO-based development approach, and general ease of use capabilities people
  have come to know from the Spring Framework, while making it easy for
  developers to access and leverage more advance enterprise services when
  necessary. Spring Batch is not a scheduling framework. There are many good
  enterprise schedulers available in both the commercial and open source
  spaces such as Quartz, Tivoli, Control-M, etc. It is intended to work in
  conjunction with a scheduler, not replace a scheduler.</p><p>Spring Batch provides reusable functions that are essential in
  processing large volumes of records, including logging/tracing, transaction
  management, job processing statistics, job restart, skip, and resource
  management. It also provides more advance technical services and features
  that will enable extremely high-volume and high performance batch jobs
  though optimization and partitioning techniques. Simple as well as complex,
  high-volume batch jobs can leverage the framework in a highly scalable
  manner to process significant volumes of information.</p><section class="section" title="Background" epub:type="subchapter" id="springBatchBackground"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Background</h2></div></div></div><p>While open source software projects and associated communities have
    focused greater attention on web-based and SOA messaging-based
    architecture frameworks, there has been a notable lack of focus on
    reusable architecture frameworks to accommodate Java-based batch
    processing needs, despite continued needs to handle such processing within
    enterprise IT environments. The lack of a standard, reusable batch
    architecture has resulted in the proliferation of many one-off, in-house
    solutions developed within client enterprise IT functions.</p><p>SpringSource and Accenture have collaborated to change this.
    Accenture's hands-on industry and technical experience in implementing
    batch architectures, SpringSource's depth of technical experience, and
    Spring's proven programming model together mark a natural and powerful
    partnership to create high-quality, market relevant software aimed at
    filling an important gap in enterprise Java. Both companies are also
    currently working with a number of clients solving similar problems
    developing Spring-based batch architecture solutions. This has provided
    some useful additional detail and real-life constraints helping to ensure
    the solution can be applied to the real-world problems posed by clients.
    For these reasons and many more, SpringSource and Accenture have teamed to
    collaborate on the development of Spring Batch.</p><p>Accenture has contributed previously proprietary batch processing
    architecture frameworks, based upon decades worth of experience in
    building batch architectures with the last several generations of
    platforms, (i.e., COBOL/Mainframe, C++/Unix, and now Java/anywhere) to the
    Spring Batch project along with committer resources to drive support,
    enhancements, and the future roadmap.</p><p>The collaborative effort between Accenture and SpringSource aims to
    promote the standardization of software processing approaches, frameworks,
    and tools that can be consistently leveraged by enterprise users when
    creating batch applications. Companies and government agencies desiring to
    deliver standard, proven solutions to their enterprise IT environments
    will benefit from Spring Batch.</p></section></section><footer/></body></html>