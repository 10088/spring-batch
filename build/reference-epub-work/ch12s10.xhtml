<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Testing</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch12s09.xhtml" title="Scaling a JSR-352 batch job"/><link rel="next" href="ch13.xhtml" title="Chapter 13. Spring Batch Integration"/></head><body><header/><section class="section" title="Testing" epub:type="subchapter" id="jsrTesting"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Testing</h2></div></div></div><p>Since all JSR-352 based jobs are executed asynchronously, it can be difficult to determine when a job has
            completed.  To help with testing, Spring Batch provides the
            <code class="classname">org.springframework.batch.core.jsr.JsrTestUtils</code>.  This utility class provides the
            ability to start a job and restart a job and wait for it to complete.  Once the job completes, the
            associated <code class="classname">JobExecution</code> is returned.</p></section><footer/></body></html>